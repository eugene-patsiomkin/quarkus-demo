openapi: '3.0.2'
info:
  title: API Events
  version: '0.1.0'
servers:
  - url: https://api.server.test/v1
tags:
  - name: Geofence
    description: Geofence api
paths:
  /geofence:
    get:
      description: Get list of available event geofences
      tags: [Geofence]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  schema:
                  $ref: '#/components/schemas/Geofence'
            application/geo+json:
              schema:
                type: array
                items:
                  schema:
                  $ref: '#/components/schemas/Geofence'
    post:
      tags: [Geofence]
      description: Create geofence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Geofence'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/Geofence'

  /geofence/{id}:
    get:
      description: Get geofence by id
      tags: [Geofence]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Geofence'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/Geofence'
    put:
      description: Update geofence
      tags: [Geofence]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Geofence'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/Geofence'
    delete:
      description: Update geofence
      tags: [Geofence]
      responses:
        '200':
          description: OK
components:
  schemas:
    Geofence:
        type: object
        properties:
          id:
            type: string
            description: UUID for entity identification
            example: e69f50d6-2dab-11eb-adc1-0242ac120002
          tags:
            type: array
            items: 
              $ref: '#/components/schemas/GeofenceTag'
              discriminator:
                propertyName: type

          geometry:
            $ref: '#/components/schemas/Geometry'
          radius:
            type: number
          description:
            type: string
            description: Event type description
    Tag:
        type: object
        properties:
          id:
            type: string
            description: readable id
            example: CONSTRUCTION
          type:
            type: string
            enum: [Event, Geofence]
          description:
            type: string
            description: Type description
    GeofenceTag:
      allOf:
        - type: object
        - $ref: "#/components/schemas/Tag"
      properties:
        id:
          example: HWY 1      
        type:
          type: string
          enum: [Geofence]
    FeatureCollection:
      type: object
      properties:
        type:
          type: string
          enum: [ FeatureCollection ]
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
    Feature:
      type: object
      description: GeoJSON Feature
      properties:
        id:
          type: object
        type:
          type: string
          enum: [ Feature ]
        geometry:
          type: object
          oneOf:
            - $ref: "#/components/schemas/Point"
            - $ref: "#/components/schemas/LineString"
            - $ref: "#/components/schemas/Polygon"
            - $ref: "#/components/schemas/MultiPoint"
            - $ref: "#/components/schemas/MultiLineString"
            - $ref: "#/components/schemas/MultiPolygon"
          example:
            geometry:
              type: Point
              coordinates: [-1, 1]
        properties:
          type: object
    Geometry:
      type: object
      description:  GeoJSON geometry
      discriminator:
        propertyName: type
      externalDocs:
        url: http://GeoJSON.org/GeoJSON-spec.html#geometry-objects
      properties:
        type:
          $ref: '#/components/schemas/GeometryType'

    GeometryType:
      type: string
      enum:
        - Point
        - LineString
        - Polygon
        - MultiPoint
        - MultiLineString
        - MultiPolygon
      description:  the geometry type
      example:
        type: Point
        coordinates: [-1, 1]
    Point2D:
      type: array
      maxItems: 2
      minItems: 2
      items:
        type: number
      example: [-1, 1]
    Point:
      type: object
      description:  GeoJSON geometry
      example:
        type: Point
        coordinates: [-1, 1]
      externalDocs:
        url: http://GeoJSON.org/GeoJSON-spec.html#id2
      allOf:
        - $ref: "#/components/schemas/Geometry"
        - properties:
            coordinates:
              $ref: '#/components/schemas/Point2D'
    LineString:
      type: object
      description:  GeoJSON geometry
      externalDocs:
        url: http://GeoJSON.org/GeoJSON-spec.html#id3
      allOf:
        - $ref: "#/components/schemas/Geometry"
        - properties:
            coordinates:
              type: array
              items:
                $ref: '#/components/schemas/Point2D'
    Polygon:
      type: object
      description:  GeoJSON geometry
      externalDocs:
        url: http://GeoJSON.org/GeoJSON-spec.html#id4
      allOf:
        - $ref: "#/components/schemas/Geometry"
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  $ref: '#/components/schemas/Point2D'
    MultiPoint:
      type: object
      description:  GeoJSON geometry
      externalDocs:
        url: http://GeoJSON.org/GeoJSON-spec.html#id5
      allOf:
        - $ref: "#/components/schemas/Geometry"
        - properties:
            coordinates:
              type: array
              items:
                $ref: '#/components/schemas/Point2D'
    MultiLineString:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://GeoJSON.org/GeoJSON-spec.html#id6
      allOf:
        - $ref: "#/components/schemas/Geometry"   
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  $ref: '#/components/schemas/Point2D'
    MultiPolygon:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://GeoJSON.org/GeoJSON-spec.html#id6
      allOf:
        - $ref: "#/components/schemas/Geometry"
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Point2D'
    GeometryCollection:
      type: object
      description: GeoJSON geometry collection
      required:
      - type
      - geometries
      externalDocs:
        url: http://GeoJSON.org/GeoJSON-spec.html#geometrycollection
      properties:
        type:
          type: string
          enum:
          - GeometryCollection
        geometries:
            type: array
            items:
              $ref: '#/components/schemas/Geometry'